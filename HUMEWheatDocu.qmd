---
title: "Simulation of Wheat Growth and Development"
author: "Agronomy and Crop Science Group, Kiel University"
date: "`r Sys.Date()`"
bibliography: bibliography.bibtex.bib
csl: european-journal-of-agronomy.csl
chunk_output_type: console
html-math-method: katex
number-sections: true
toc: true
toc-expand: 4
toc-depth: 4
toc-location: left
crossref:
  eq-prefix: Eq.
format:
 html:
  mermaid:
    theme: forest
    mainfont: Helvetica Neue, Helvetica, Arial, sans
    monofont: Cascadia Mono, Menlo, Consolas, Courier New, Courier
    mathfont: "TeX Gyre Termes Math"
---

```{css}
#| echo: false
p {
  text-align: justify
}
```

```{r}
#| label: SetupLibraries
#| include: FALSE

knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
rm(list = ls(all.names = TRUE))

library(rmarkdown)
library(bookdown)
library(soilwater)
library(pracma)
library(dplyr)
library(ggplot2)
library(extrafont)
library(gifski)
library(gganimate)
library(transformr)
library(reticulate)
library(tinytex)
library(magick)
library(bibtex)
library(ggsci)
library(knitcitations)
library(kableExtra)

options("citation_format" = "pandoc")


```

This document is as a short documentation of the wheat crop-soil-model (CSM) ‘HumeWheat’ used in the current work of the agronomy group of CAU Kiel. The wheat specific part was developed within several projects with main contributions by Arne Ratjen [@ratjen2016; @ratjen2015; @ratjen2016; @ratjen2015b], Ulf Böttcher, Adam Luig, Dorothee Neukam [@neukam2016] [@neukam2015] and others. It is in many aspects based on the CERES-Wheat model (CW) [@ritchie2015], but uses different approaches especially for dry matter and nitrogen partitioning, leaf area expansion and dry matter production. Also the development part is extended in comparison to the original CERES wheat approach as it predicts BBCH stages on the basis of an explicit simulation of leaf initiation and appearance. ‘HumeWheat’ is a mechanistic CSM and runs on a daily time step. The model is of a modular design principle and was developed using an object oriented class component library (Kage and Stützel 1999a) implemented in the Borland Delphi Builder® V5 development environment. The model runs on daily time steps, but internal integration of the soil water balance module is on smaller time steps, the size dependent on the maximum changes of the soil water in the layers of the 1-D soil water balance model. Required external data inputs are the mean daily temperature \[°C\], precipitation \[mm d^-1^\], global radiation \[W m^-2^\], wind speed \[m s^-1^\], relative humidity \[%\] and values derived from these like vapor pressure \[mbar\] and saturation deficit \[mbar\].

# Development

The phenological model module of HumeWheat is based on phenological Ceres Wheat (CW) model for winter wheat. It has been published originally in [@johnen2012]. The phenological process in CW is divided into nine developmental or growth stages (GS) according to [@ritchie2015] (@tbl-CWDevStages), the common approach in Europe, however is the BBCH stage [@lancashire1991a]. Zadoks stages or equivalent BBCH values, however, are not calculated in the original phenology model of CERES-Wheat up to Version 3.0.

| GS  | BBCH | Phase                                                                            |
|-------------------|-------------------|----------------------------------|
| 7   | 00   | Fallow                                                                           |
| 8   | 00   | Sowing to germination                                                            |
| 9   | 05   | Germination to emergence                                                         |
| 1   | 10   | Emergence to terminal Spikelet initiation                                        |
| 2   | 30   | Terminal spikelet to end of leaf growth and beginning of ear growth              |
| 3   | 40   | End of leaf growth and beginning of ear growth to end of pre-anthesis ear growth |
| 4   | 57   | End of pre-anthesis ear growth to beginning of grain filling                     |
| 5   | 71   | Grain filling                                                                    |
| 6   | 90   | End of grain filling to harvest                                                  |

: Development stages of the CW model (GS) and corresponding BBCH stages {#tbl-CWDevStages}

The CW model mainly describes phenological development through the change of GS over time. In CWm we added an explicit simulation of three additional state variables, the leaf number on the main stem (nLMS), the number of initiated leaves on the main stem (inLMS) and the BBCH stage. At emergence nLMS is set to one and inLMS is set to 4 [@brooking2002a]. This is because the embryo at the time of sowing has already three leaf primordia [@kirby1985] and that an additional primordium is assumed to be produced until emergence. The rate of change of number of initiated leaves is calculated according to @eq-dinLMS from emergence until the last leaf primordium is formed:

$$
\frac{d\,in{{L}_{MS}}}{dt}=\frac{\max
(0,T-{{T}_{b}})}{Plast}
$$ {#eq-dinLMS}

Where Plast is the plastochron (°Cd) T is the air temperature and T~b~ is the base temperature. The formation of leaf primordia which produce leaves is finished some time before the double ridge stage (Bonnet, 1935; Bonnet, 1936; Muschik, 1957). The time of the cessation of leaf primordia initiation, however, is not exactly coupled to a certain GS in the CW model and is also not linked to a certain BBCH stage. From available data of BBCH 37, i.e. the time when the last leaf appears, it was possible to estimate an approximate GS corresponding to the formation of the final leaf primordium ($GS_{flp}$) *ex post*. The number of visible leaves on the main stem nLMS is calculated accordingly (@eq-dnLMS):

$$\frac{d\,n{{L}_{MS}}}{dt}=\frac{\max (0,T-{{T}_{b}})}{Phyll}$$ {#eq-dnLMS}

where Phyll denotes the phyllochron (°Cd).

## Calculation of changes of GS and BBCH

The main state variables of the phenological model are the GS-stage according to Ritchie and the BBCH-stage more commonly used in the description of wheat phenology. Their rate of change is calculated stage specific.

### Sowing to emergence (GS 8 and 9)

We simplified the model by pooling together the GS stages eight and nine, which represent the germination and emergence processes, because no data were available to distinguish between both events. The redefined parameter P9, which now governs the rate of development during the time from sowing to emergence, was calculated from observed thermal times from sowing to emergence .

$$\frac{dGS}{dt}=\frac{\max (0,T-{{T}_{b}})}{P9}$$ {#eq-dGS_dt_GS9}

The rate of change for BBCH is ten time higher as for GS as the event of crop emergence is equivalent to 10.

$$\frac{dBBCH}{dt}=10\frac{\max (0,T-{{T}_{b}})}{P9}$$ {#eq-dBBCH_dt_GS9}

### Emergence to terminal Spikelet initiation (GS 1)

Temperature, vernalization, photoperiod, and phyllochron interval determine the development rate during GS 1. According to CW the lowest value of two functions, depending on the vernalization stage and the actual photoperiod in interaction with the actual effective temperature limits the development rate (@eq-dGS_dt_GS1).

$$\frac{dGS}{dt}=\frac{\max (0,T-{{T}_{b}})\cdot \min (f(V),f(P))}{(400\cdot Phyll\ /\ 95)}$$ {#eq-dGS_dt_GS1}

The functions f(V) and f(P) as well as the Phyllocron (Phyll) are genotype specific.

#### Vernalisation

The effect of vernalisation on the development rate is calculated from the accumulated sum of "vernalisation days". The rate of change of the vernalisation days is calculated from the daily mean temperature and a vernalisation response function which is characterized by 4 cardinal temperatures (@fig-RelVernalisation).

![Relative vernalisation rate of winter wheat](RelVernalisation.png){#fig-RelVernalisation}

The vernalisation rate is acccumulated in the state variable VernalisationDays.

$$\frac{dV}{dt}=\max (0, fV)$$ {#eq-dV_dt}

The value of the f(V) in @eq-dGS_dt_GS1 is calculated from the actual value of accumulated number of vernalisation dates according to:

$$f(V) = 1-k\cdot \left(50-V \right)$$ {#eq-fV_k}

The values of k thereby is genotype specific and according to Ritchie et al. (1998) is coded in the parameter value P1V. The value of 50 in @eq-fV_k is the maximum number of vernalisation days. The vernalisation days are reset to zero after the maximum number of vernalisation days is reached.\
The value k is the slope of the linear relation between the vernalisation days and the development rate. It can be calculated from the parameter P1V according to

$$k = \frac {P1V+0.55}{183}$$ {#eq-kfromP1V} For a larger number of wheat cultivars in Germany [@johnen2012b] found a value of P1V of 2.84. Higher values of P1V indicate a higher vernalisation requirement of the cultivar, i.e. a lower development rate at low vernalisation days which is typical for cultivars of continental origin. A low value of P1V indicates a low vernalisation requirement, typical for summer crops of wheat or for wheat cultivars grown in Mediterranean regions.

```{r}
#| label: fig-VernRate
#| fig-cap: Relative vernalisation rate of winter wheat as a function of accumulated vernalisation days
#| fig-align: center
#| echo: false


fV <- function(V, k){
  fV <- 1 - k * (50 - V)
  fV <- pmax(fV, 0)
  return(fV)
}

P1V <- c(0.5, 2.84, 5)
k <- (P1V+0.55) / 183 

VernDays <- seq(0, 50, 1)

df_VernRate <- expand.grid( k = k, V = VernDays)
df_VernRate$fV <- fV(df_VernRate$V, k)
df_VernRate <- df_VernRate %>% mutate(P1V = round(k * 183-0.55,3))

df_VernRate <- df_VernRate %>% mutate(P1V = as.factor(P1V))
df_VernRate <- df_VernRate %>% filter(fV >= 0)
df_VernRate <- df_VernRate %>% arrange(V, P1V)

ggplot(data = df_VernRate, aes(x = V, y = fV, color=P1V), size=2) +
  geom_line(size=2) +
  labs(x = "Vernalisation days", y = "fV [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_aaas()  



```

#### Photoperiod

The effect of photoperiod on the development rate (f(P)) is calculated from the actual photoperiod and a photoperiod response function

$$f(P)=1-C \cdot\left(20-P\right)^2$$ {#eq-fPhoto}

The parameter C is coded in the parameter P1D. The value of 20 in @eq-fPhoto is the maximum photoperiod. The value of C is the slope of the quadratic relation between the photoperiod and the development rate. It can be calculated from the parameter P1D according to

$$C=P1D/500$$ {#eq-CfromP1D}

Typical values of P1D are in the range of 1 to 3. Higher values of P1D indicate a higher photoperiod requirement of the cultivar, i.e. a lower development rate at low photoperiods which is typical for cultivars of northern origin. A low value of P1D indicates a low photoperiod requirement, typical for summer crops of wheat or for wheat cultivars grown in mediterranean regions. In the study of [@johnen2012a] a value of P1D of 2.76 was found as a mean for a larger number of wheat cultivars in Germany.

```{r}
#| label: fig-PhotRate
#| fig-cap: Relative development rate of winter wheat at GS1 as a function of photoperiod
#| fig-align: center
#| echo: false

fP <- function(P, C){
  fP <- 1 - C * (20 - P)^2
  fP <- pmax(fP, 0)
  return(fP)
}

P1D <- c(1, 2, 3)
C <- P1D / 500

Photoperiod <- seq(8, 20, 0.2)

df_PhotRate <- expand.grid( C = C, P = Photoperiod)
df_PhotRate$fP <- fP(df_PhotRate$P, df_PhotRate$C)
df_PhotRate <- df_PhotRate %>% mutate(P1D = round(C * 500,3))

df_PhotRate <- df_PhotRate %>% mutate(P1D = as.factor(P1D))
df_PhotRate <- df_PhotRate %>% filter(fP >= 0)
df_PhotRate <- df_PhotRate %>% arrange(P, P1D)

ggplot(data = df_PhotRate, aes(x = P, y = fP, color=P1D), size=2) +
  geom_line(size=2) +
  labs(x = "Photoperiod [h]", y = "fP [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_aaas()  


```

#### Leaf number and leaf initiation

At early development stages (BBCH\<30) BBCH stages are determined by the number of leaves and tillers present. Their rate of change is determined by the Phyllochron (Phyll), i.e. the inverse of the phyllochron is the emergence rate of leaves and tillers per effective day temperature (\@eq-dBBCH_dt_GS1).

$$\frac{dBBCH}{dt}=\frac{\max (0,T-{{T}_{b}})}{Phyll}$$ {#eq-dBBCH_dt_GS1}

At BBCH 13.5 there is a switch to BBCH 21, because simultaneously to the appearance of the fourth leaf the first tiller is emerging and mainstem leaf appearance is then associated with tiller appearance until BBCH 30.

The plastochron is the inverse of the rate of leaf initiation. It is assumed to be constant during the time from sowing to the end of leaf initation. It defines the rate of leaf initiation and together with the initial number of leaf primordia of the embryo at sowing the number of initiated leaves and with the GS stage when leaf initation ceases the number of leaves on the main stem.

$$If \ \ BBCH >= 13.5 \ and \ BBCH<20; \    BBCH = BBCH+7.5$$ {#eq-BBCH_jumpto21}

### Terminal spikelet to end of leaf growth and beginning of ear growth (GS 2)

Within the model the implicit and simplifying assumption is made that GS 2 stage is more or less closely associated with BBCH 30 [@baker1983], but that the initiation of the terminal leaf primordium may be reached a bit earlier at a stage we named $GS_{flp}$.

The GS change rate between GS 2 and 3 is calculated as the ratio of the daily temperature minus the base temperature (T~b~, assumed to be 0°C) to the thermal time interval GS 2 to GS 3. This thermal time interval is calculated by the number of leaves not yet expressed at GS 2 minus two (fL), multiplied by the phyllochron plus the temperature sum between BBCH 37 and 39, i.e. ‘PH39’:.

$$\frac{dGS}{dt}=\frac{\max (0,T-{{T}_{b}})}{fL\cdot Phyll+Ph39}$$ {#eq-dGS_dt_GS2}

thereby the term fL denotes the leaves which have to appear after GS 2 is reached, calculated from the number of initiated leaves at GS 2 minus 2. The substraction of two leaf primordia was made in accordance to the assumption that at least the last two vegetative primordia may not produce visible leaves, they are therefore sometimes called labile primordia [@griffiths1985].

In the CWm model we therefore calculated a rate of node emission and introduced a parameter we called ‘TSumInternode’ analogous to the phyllochron. The numerical value of this parameter is the inverse of the slope of the relation of node numbers to the temperature sum from BBCH 30. The rate of change of BBCH stages is calculated until BBCH 37 (final leaf begins to emerge) from the ratio of the effective day temperature and TSumInternode (@eq-dBBCH_dt_GS1).

The BBCH stage 37 is reached when the number of the emerged leaves is equal to the number of leaf primordia minus two. The subtraction of two leaf primordia was made in accordance to the assumption that at least the last two vegetative primordia may not produce visible leaves, they are therefore sometimes called labile primordia [@griffiths1985].

The length of the thermal time from sowing to the initiation of the last leaf primordium together with the plastochron now determines the number of initiated leaves. This number is variable and the new algorithm of CWm therefore also predicts a variable length of GS 2 in terms of temperature sum. In CWm the rate of development between BBCH 37 and BBCH 39, however, is again described by a certain temperature sum expressed as the newly added parameter ‘PH39’ (@eq-dBBCH_dt_GS2b). It was introduced because according to our data analysis the thermal time between BBCH 37 and 39 ratings was significantly longer than one phyllochron.

$$\frac{dBBCH}{dt}=\frac{\max (0,T-{{T}_{b}})}{\text{TSumInternode}}$$ {#eq-dBBCH_dt_GS2a}

If nL_MS \> inL_MS-2 and If BBCH\< 37 then BBCH = 37 If BBCH\>=37:

$$
  \frac{dBBCH}{dt}= \min \left( \frac{2\max (0,T-{{T}_{b}})}{\text{Ph39}},(40-BBCH) \right)
$$ {#eq-dBBCH_dt_GS2b}

### End of leaf growth and beginning of ear growth to end of pre-anthesis ear growth (GS3)

The period from the end of leaf growth to the beginning of ear growth is for the GS development rate defined by a length of 2 phytochrons

$$\frac{dGS}{dt}=\frac{\max (0,T-{{T}_{b}})}{2Phyll}$$ {#eq-dGS_dt_GS3}

The rate of change of BBCH stages is during that stage simply synchronized with the GS rate according to equation @eq-dBBCH_dt_GS3.

$$\frac{dBBCH}{dt}=(4+1.7(GS-3))\cdot 10-BBCH$$ {#eq-dBBCH_dt_GS3}

### End of pre-anthesis ear growth to beginning of grain filling (GS4)

The period from the end of pre-anthesis ear growth to the beginning of grain filling is for the GS development rate defined by a length of 200 degree days:

$$\frac{dGS}{dt}=\frac{\max (0,T-{{T}_{b}})}{200}$$ {#eq-dGS_dt_GS4}

The rate of change of BBCH stages is during that stage simply synchronized with the GS rate according to equation @eq-dBBCH_dt_GS4.

$$\frac{dBBCH}{dt}=(5.7+1.4(GS-4))\cdot 10-BBCH$$ {#eq-dBBCH_dt_GS4}

### Grain filling (GS5)

The period of grain filling is for the GS development rate defined by a genotype specific temperature sum and the effective temperature during grain filling. The latter is calculated as the mean temperature minus the base temperature. The effective temperature is divided by the temperature sum for grain filling (TSumGF) to get the rate of change of GS 5:

$$\frac{dGS}{dt}=\frac{\max (0,(T-{{T}_{b}})-1)}{TSumGF}$$ {#eq-dGS_dt_GS5}

$$TSum_{GF} = \frac{(P5+21.5)}{0.05}$$ {#eq-TSumGF}

The rate of change of BBCH stages is during that stage simply synchronized with the GS rate according to equation @eq-dBBCH_dt_GS5.

$$\frac{dBBCH}{dt}=(7.1+1.9(GS-5))\cdot 10-BBCH$$ {#eq-dBBCH_dt_GS5}

### End of grain filling to harvest (GS6)

The period from the end of grain filling to harvest is for the GS development rate defined by a length of 250 degree days:

$$\frac{dGS}{dt}=\frac{\max (0,T-{{T}_{b}})}{250}$$ {#eq-dGS_dt_GS6}

The rate of change of BBCH stages is during that stage simply synchronized with the GS rate according to equation @eq-dBBCH_dt_GS6.

$$\frac{dBBCH}{dt}=(9+(GS-6))\cdot 10-BBCH$$ {#eq-dBBCH_dt_GS6}

# Dry matter production

The daily dry matter accumulation ($\frac{d{W_{tot}}}{dt}$) of the canopy is calculated according to the LUE approach, using the simple *big-leaf* canopy model. Within the source code the term *carbo* is used to denote the daily growth rate. The potential daily dry matter accumulation rate is a function of intercepted PAR multiplied with the potential light use efficiency LUE~pot~). LUE is affected by extremes of daily mean temperature, water limitation, nitrogen concentration of the canopy and the external CO~2~ concentration of the atmosphere as described in the following sections.

```{mermaid}
%%| label: fig-Modelscheme
%%| fig-cap: Calculation of daily dry matter production in HUMEWheat. 
%%| fig-align: center

flowchart LR
  A(LUE<sub>eff</sup>) -.-> F
  C(f<sub>T</sup>) -.-> A
  D(SWDF) -.-> A
  E(Q) --> F{dW/dt}
  G(I) --> E
  H(f<sub>int</sub>) -.-> E
  I(LAI) -.-> H
  J((LUE<sub>pot</sub>)) -.-> A
  K(f<sub>SLN</sub>) -.-> A
  L(SLN) -.-> K
  M(f<sub>CO2</sub>) -.-> A
  N(CO<sub>2</sub>) -.-> M
  O(CWSI) -.-> M
  

```

## Radiation interception

According to the Lambert-Beer law the fraction of the intercepted PAR is a function of leaf area index (LAI) and extinction coefficient (k~PAR~). Canopy reflection within the PAR range is thereby lumped into the empirical k~PAR~ value. The state variable LAI is calculated in the leaf area module. The fraction of intercepted PAR (f~int~) is calculated as follows:

$$Q= PAR\text{(t)} \cdot \left ( 1-{e^{-{k_{PAR}} \cdot LAI\text{(t)}}} \right)$$ {#eq-PARincterception} This is a very simplified approach, not considering fractions of direct and diffuse radiation and their complex interactions with the canopy. To account for the effect of LAI on the extinction coefficient, the extinction coefficient is calculated as a function of LAI and the maximum extinction coefficient (k~PAR~ini) according to the following equation:

$$k_{PAR} = min \left( k_{PAR_{max}},\ max(k_{ini}+ln(LAI) \cdot k_{dec}, \ k_{PAR}) \right)$$ {#eq-KPAR_fLAI}

where k~ini~ is the initial extinction coefficient and k~dec~ is the extinction coefficient decrease per unit of LAI. The standard extinction coefficient (k~PAR~max) is set to 0.7 in the model.

```{r}
#| label: fig-kPAR
#| fig-cap: Extinction coefficient kPAR as a function of LAI
#| fig-align: center
#| echo: false

kini <- 0.75
kdec <- -0.06
kPARmax <- 0.7

kPAR <- function(LAI, kPARmax, kini, kdec){
  kPAR <- pmin(0.9,pmax(kini + log(LAI) * kdec, kPARmax))
  return(kPAR)
}

df_kPAR <- data.frame(LAI = seq(0, 5, 0.01))

df_kPAR$kPAR <- kPAR(df_kPAR$LAI, kPARmax, kini, kdec)

ggplot(data = df_kPAR, aes(x = LAI, y = kPAR)) +
  geom_line( size=2) +
  labs(x = "LAI [-]", y = "kPAR [-]" ) +
  theme_bw(base_size = 20) +
  scale_y_continuous(limits = c(0, 1)) +
  scale_color_aaas()  



```

## Limiting factors on LUE

Suboptimal temperature and drought stress reduces dry matter production rates below the potential. The influence of suboptimal conditions is quantified by a temperature (f~T~) and a soil water deficit factor (SWDF).

### Temperature

Daily mean temperature is calculated in a classical way from observed maximum and minimum temperature. if difference between min and max temperature is high, the maximum temperature is weighted stronger.

$$if \left((T_{max} - T_{min}) > \Delta T_{crit}\right)  then  \\
\quad T_{mean} = T_{max} \cdot T_{max_{wF}} + T_{min} \cdot (1 - T_{max_{wF}})$$ {#eq-TmaxwF}

The weighting factor $T_{max_{wF}}$ is taken as 0.567. The critical temperature difference $\Delta T_{crit}$ is set to 8°C.

The effect of temperature on LUE is calculated using a temperature effect factor fT \[0..1\] from the daily mean temperature. The base for its calculation is the equation of [@wang2002] (@eq-fT_WangEngel, @fig-fT_WangEngel).

$$fT =  \frac{ \left( 2 \cdot (T - T_{min})^{\alpha} \cdot (T_{opt} - T_{min})^{\alpha} - (T - T_{min})^{(2 \cdot \alpha)} \right)} { (T_{opt} - T_{min})^{(2 \cdot \alpha)}}$$ {#eq-fT_WangEngel}

with $$\alpha = \frac{  ln(2)}{ln((T_{max}-T_{min})/(T_{opt}-T_{min}))}$$ {#eq-fT_WangEngel_alpha} For @fig-fT_WangEngel the parameters Tmin = 0°C, Topt = 20°C and Tmax = 35°C were used.

```{r}
#| label: fig-fT_WangEngel
#| fig-cap: Temperature limitation factor fT as a function of mean daily temperature
#| fig-align: center
#| echo: false

fT_WangEngel <- function(T, Tmin, Topt, Tmax){
  alpha <- log(2)/log((Tmax-Tmin)/(Topt-Tmin))
  fT <- (2 * (T - Tmin)^alpha * (Topt - Tmin)^alpha - (T - Tmin)^(2 * alpha)) / (Topt - Tmin)^(2 * alpha)
  return(fT)
}

Tmin <- 0
ToptWE <- 20
Tmax <- 35

df_fT <- data.frame(T = seq(-5, 35, 0.1))
df_fT$fT <- fT_WangEngel(df_fT$T, Tmin, ToptWE, Tmax)

ggplot(data = df_fT, aes(x = T, y = fT, , color=T)) +
  geom_line( size=2) +
  labs(x = "Mean daily temperature [°C]", y = "fT [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_gradient(low = "blue", high = "red")
 # scale_color_aaas()  


```

If available an canopy surface temperature can be used to calculate the temperature effect factor. The minimum of the obtained fT value is used for the calculation of the daily dry matter accumulation rate.

### Drought stress

For stomatal aperture, the diffusion paths and therefore the resistances/conductivities for CO~2~ and water evaporation are not identical, because of the liquid-phase components of the CO~2~ pathway into the mesophyll. Consequently, a non-linear relation between transpiration and LUE reduction is assumed, according to [@ferreyra2003]. The formulation based on the RT factor technically calculated in the soil water module: RT is defined as the ratio between the sum of Tact and interception evaporation (I~p~) divided by the sum of T~pot~ and I~p~. The factor is calculated as the ratio

$$RT= \frac{ (T_{act}+I_p)}{(T_{pot}+I_p)}$$ {#eq-RelTranspiration}

Within the source code of *HUMEWheat* the factor RT is called *TransIntRatio*. The soil water deficit factor (SWDF) is calculated from the RT as follows:

$$SWDF = 1-( 1-RT )^{pSWDF}$$ {#eq-SWDF}

The value of pSWDF thereby defines the non-linearity of the relation between RT and SWDF. The value of pSWDF is set to 2.5 in the model. @fig-SWDF shows the relation between RT and SWDF for different values of pSWDF.

```{r}
#| label: fig-SWDF
#| fig-cap: Relation between RT and SWDF for different values of pSWDF
#| fig-align: center
#| echo: false


SWDF <- function(RT, pSWDF){
  SWDF <- 1 - (1 - RT)^pSWDF
  return(SWDF)
}

RT <- seq(0.0, 1, 0.05)

pSWDF <- c(1, 1.5, 2, 2.5, 3)

df_SWDF <- expand.grid(RT = RT, pSWDF = pSWDF)


df_SWDF$SWDF <- SWDF(df_SWDF$RT, df_SWDF$pSWDF)
df_SWDF <- df_SWDF %>% mutate(pSWDF = as.factor(pSWDF))

ggplot(data = df_SWDF, aes(x = RT, y = SWDF, color=pSWDF) ) +
  geom_line(size=2) +
  labs(x = "Relative Transpiration + Interception [-]", y = "SWDF [-]") +
  theme_bw(base_size = 20) +
  scale_color_aaas()  

```

### Nitrogen limitations

Consistent with @sinclair1989, @meinke1997 and @meinke1998 HumeWheat uses an SLN threshold value SLN~crit~ \[g N^.^cm^-2^\] below which a LUE reduction factor (f~SLN~) is applied.

In a first step the optimum SLN value (SLN~crit~) is calculated from the initial SLN value ($SLN_{crit_{int}}$) and the green area index (GAI) according to the following equation:

$$SLN_{crit} =SLN_{crit_{int}}+SLN_{crit_{inc}} \cdot GAI;$$ {#eq-SLNcrit}

The values of the parameters $SLN_{crit_{int}}$ and $SLN_{crit_{inc}}$ are set to 3.74 and -0.228, respectively [@ratjen2015a]. The value of $SLN_{crit_{int}}$ is the initial SLN value at GAI = 0. The value of $SLN_{crit_{inc}}$ is the increase of the SLN~crit~ value per unit of GAI.

```{r}
#| label: fig-SLNcrit
#| fig-cap: Critical SLN value SLNcrit as a function of GAI
#| fig-align: center
#| echo: false

SLNcrit <- function(GAI, SLNcrit_int, SLNcrit_inc){
  SLNcrit <- SLNcrit_int + SLNcrit_inc * GAI
  return(SLNcrit)
}

SLNcrit_int <- 3.74
SLNcrit_inc <- -0.228

GAI <- seq(0, 5, 0.01)

df_SLNcrit <- data.frame(GAI = GAI)

df_SLNcrit$SLNcrit <- SLNcrit(df_SLNcrit$GAI, SLNcrit_int, SLNcrit_inc)

ggplot(data = df_SLNcrit, aes(x = GAI, y = SLNcrit, color=SLNcrit)) +
  geom_line(size=2) +
  labs(x = "GAI [m^2 m^-2]", y = "SLNcrit [g N cm^-2]") +
  scale_color_gradient(low = "yellow", high = "darkgreen") +
  theme_bw(base_size = 20) +
  scale_y_continuous(limits = c(0, 5)) 

```

The @fig-SLN_GAI from @ratjen2015a gives the original source of this relationship derived from an analysis of experimental data using quartile regression.

![Relationship between maximum overall specific leaf nitrogen (SLN: upper 10% quantile of green area index (GAI) class intervals) and GAI. Intercept: 3·74 (P \< 0·001); slope: –0·228 (P \< 0·001).](SLN_GAI.gif){#fig-SLN_GAI}

Before booting SLN~crit~ is always lower than SLN~opt~.

A nitrogen limitation factor SLNI is calculated from the ratio of the actual SLN value (SLN) and the critical SLN value (SLN~crit~) according to the following equation:

$$SLNI = min \left( 1, \frac {SLN} {SLN_{crit}} \right)$$ {#eq-SLNI}

The obtained value then SLNI is used to calculate the nitrogen limitation factor Carbo~red~ according to the following non-linear equation:

$$Carbo_{red} = min\left(1, max \left(0, SLNI_a. + SLNI_b \cdot SLNI + SLNI_c \cdot SLNI^2 \right)\right)$$ {#eq-CarboRed}

The values of the parameters SLNI~a~, SLNI~b~ and SLNI~c~ are set to -0.197, 2.8 and -1.6, respectively [@ratjen2015a]. The value of SLNI~a~ is the intercept of the Carbo~red~ function. The value of SLNI~b~ is the slope of the Carbo~red~ function. The value of SLNI~c~ is the curvature of the Carbo~red~ function. The Carbo~red~ function is shown in @fig-CarboRed.\
The name of the variable Carbo~red~ is derived from the original CERES-Wheat source code where it is primarily used to calculate the reduction of the photosynthesis during ripening/senescence. We use it here to calculate the general reduction of the LUE due to nitrogen limitation.

![Relationship between relative light use efficiency and the index SLNI from @ratjen2015a.](rLUE_SLNI.png){#fig-rLUE_SLNI}

```{r}
#| label: fig-CarboRed
#| fig-cap: Carbohydrate reduction factor CarboRed as a function of SLNI
#| fig-align: center
#| echo: false

CarboRed <- function(SLNI, SLNI_a, SLNI_b, SLNI_c){
  CarboRed <- pmin(1,pmax(0, SLNI_a + SLNI_b * SLNI + SLNI_c * SLNI^2))
  return(CarboRed)
}

SLNI_a <- -0.197
SLNI_b <- 2.8
SLNI_c <- -1.6

SLNI <- seq(0, 1, 0.01)

df_CarboRed <- data.frame(SLNI = SLNI)

df_CarboRed$CarboRed <- CarboRed(df_CarboRed$SLNI, SLNI_a, SLNI_b, SLNI_c)

ggplot(data = df_CarboRed, aes(x = SLNI, y = CarboRed, color=SLNI)) +
  geom_line(size=2) +
  labs(x = "SLNI [0..1]", y = "CarboRed [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_gradient(low = "yellow", high = "darkgreen")
  #scale_color_aaas()


```

### CO~2~ concentration

The effect of a varying CO~2~ concentration on LUE is optionally calculated using a CO~2~ effect factor f~CO~2\~ \[0..1\]. Thereby an interaction with the crop water stress status is assumed. The CO~2~ effect factor is calculated as follows:

$$f_{CO2} = max\left( f_{CO_2min}, \ f_{CO_2min} \cdot  \left(\left[CO_2\right]-\tau \right)^{fCO_2}  \right)$$ {#eq-fCO2}

with

$$ f_{CO_2min} = (f_{CO_2}scale+CWSI \cdot f_{CWSI})$$ {#eq-fCO2min}

The crop water stress index is calculated from 1-TransIntRatio (0 = no drought stress, 1 = maximum drought stress). The interaction of CWSI and CO~2~ concentration is described by the parameter f~CWSI~. The parameter f~CO~2\~scale is the CO~2~ effect factor at the CO~2~ concentration of the compensation point ($\tau$). The parameter f~CO~2\~ is the slope of the CO~2~ effect factor curve. The parameter $\tau$ is the CO~2~ concentration at which the CO~2~ effect factor is equal to f~CO~2\~scale. The CO~2~ effect factor is limited to a value between 0 and 1. It follows from @fig-fCO2eff that the CO~2~ effect factor increases with increasing CO~2~ concentration and increasing CWSI, which means that the effect of CO~2~ on LUE is stronger under drought stress conditions.

```{r}
#| label: fig-fCO2eff
#| fig-cap: CO2 effect factor fCO2 as a function of CO2 concentration and SWDF
#| fig-align: center
#| echo: false


fCO2_f <- function(CO2pp, CiCompensation, fCO2_scale, fCO2, fCWSI, CWSI){
  CO2_factor_min <- (fCO2_scale + CWSI * fCWSI)
  CO2_factor <- ifelse(CO2pp > CiCompensation,
                       max(CO2_factor_min, CO2_factor_min * (CO2pp - CiCompensation)^fCO2),
                       CO2_factor_min)                       
  return(CO2_factor)
}

CO2pp <- seq(350, 600, 10)
CiCompensation <- 350
fCO2_scale <- 0.723
fCO2 <- 0.086
CWSI <- seq(0, 0.8, 0.2)
fCWSI <- 0.077	

df_fCO2 <- expand.grid(CO2pp = CO2pp, CWSI = CWSI)

df_fCO2$fCO2 <- Vectorize (fCO2_f)(df_fCO2$CO2pp, CiCompensation, fCO2_scale, fCO2, fCWSI, df_fCO2$CWSI)
df_fCO2 <- df_fCO2 %>% mutate(CWSI = as.factor(CWSI))

ggplot(data = df_fCO2, aes(x = CO2pp, y = fCO2, color=CWSI)) +
  geom_line(size=2) +
  labs(x = "CO2 concentration [ppm]", y = "fCO2 [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_brewer()  +
  scale_x_continuous(limits = c(350, 600))



```

## Daily dry matter accumulation

The daily dry matter accumulation rate of the canopy is calculated as follows:

$$PCARB = LUE_{pot} \cdot PAR \cdot f_{int} \cdot min(f_T,Tempf_{surface})  \cdot f_{CO2} \cdot min(SWDF, Carbo_{red})$$ {#eq-PCARB}

where $LUE$ is the light use efficiency, $PAR$ is the photosynthetically active radiation, $f_{int}$ is the fraction of intercepted PAR, $f_T$ is the temperature effect factor, $Tempf_{surface}$ is the temperature effect factor calculated from the canopy surface temperature, $f_{CO2}$ is the CO~2~ effect factor, $SWDF$ is the soil water deficit factor and $Carbo_{red}$ is the nitrogen limitation factor.

The daily dry matter per plant is calculated as follows:

$$ CARBO = PCARB / Plants$$ {#eq-CARBO}

From the daily dry matter accumulation rate and the amount of intercepted radiation and the *effective* radiation use efficiency the daily dry matter accumulation rate of the canopy is calculated.

$$LUE_{eff} =   \frac {PCARB}{IPAR}$$ {#eq-LUEeff}

where $IPAR$ is the intercepted PAR. The effective radiation use efficiency thereby sums up the different limitations of the LUE into a single value.

# Dry Matter Partitioning

The daily dry matter accumulation rate of the canopy is partitioned into the different plant organs. The partitioning of the daily dry matter accumulation rate into the different plant organs is in contrast to many other crop growth models based on the concept of allometric relationships between the organs of the crop. The other governing principle is the concept N dilution, i.e. decreasing N concentrations of the organs.

Effects of nitrogen shortage and drought stress on the partitioning of dry matter are considered in the model, but can be switched off by setting the respectives model options.

## Initialisation

The initial leaf weight per plant after emergence is calculated from the initial leaf area and the specific leaf area (SLA) according to the following equation:

$$LFWT_{pl} = LA_{ini} / SLA_{pot}$$ {#eq-LFWTplini}

The stem weight per plant then is calculated from an allometric relationship between leaf and stem weight according to the following equation:

$$STMWT_{pl} = exp(g * ln(LFWT_{pl} * plants) + h) / plants$$ {#eq-STMWTplini}

where $g$ and $h$ are parameters of the allometric relationship. The default values of *g* and *h* are set to 1.46 and -2.13 in the model.

The seed reserves from the parameter SEEDRV~ini~:

$$SEEDRV = SEEDRV_{ini}$$ {#eq-SEEDRVini}

The nitrogen amount in the leaf fraction is calculated from the leaf nitrogen concentration under optimum N supply and the initial leaf weight per plant according to the following equation:

$$NLeaf_{pl} = LFWT_{pl} * Nc_{opt_{Leaf}} / 100$$ {#eq-NLeafplini}

Accordingly, the nitrogen amount in the stem fraction is calculated from the stem nitrogen concentration under optimum N supply and the initial stem weight per plant according to the following equation:

$$NStem_{pl} = STMWT_{pl} * NoptStem / 100$$ {#eq-NStemplini}

The initial amount of N in the shoot of a single wheat plant is calculated as the sum of the N in the leaf and stem fraction:

$$NShoot_{pl} = NStoragepool_{pl} + NLeaf_{pl} + NStem_{pl} + NGrain_{pl}$$ {#eq-NShootplini}

The N amount in the root fraction is calculated from the initial shoot N amount and a fraction of the initial shoot N amount according to the following equation : $$NRoot_{pl} = NShoot_{pl} * fRootN_{ini}$$ {#eq-NRootplini}

## SeedRV change

The seed reserves contribute to the daily dry matter accumulation rate of the canopy. Their rate of change is calculated as follows:

$$\frac{SEEDRV}{dt} = -k_{SEEDRV} * SEEDRV$$ {#eq-SEEDRVdt}

where $k_{SEEDRV}$ is the rate of change of seed reserves. The value of $k_{SEEDRV}$ is set to 0.15 in the model, i.e. the daily change rate is 15% of the actual amount.

The rate of change of seed reserves is added to the assimilate flow calles 'Assiflow' in the model:

\$\$Assiflow = Assiflow - SEEDRV.c;

## Allometric Leaf Stem Partitioning

### Drought effects

The partitioning of dry matter between leaf and stem is influenced by the soil water potential. Under water stress conditions the partitioning of dry matter to the stem is increased (@fig-AlloDrought).

![Relationship between the log-transformed leaf \[ln(DML)\] and stem mass \[ln(DMS)\] for W0 and W100 treatments (g=slope). W100 (black): r2 =0.96, n = 26; W0 (white): r2 =0.87, n = 23.](jac12165-fig-0002-m.jpg){#fig-AlloDrought}

Within the dry matter module the variable kf~d~ describes the influence of *psi~root~*, i.e. the absolute, non negative weighted average of the soil hydraulic potential on leaf stem partitioning.

The value of k_f is calculated as follows:

$$kf_d = max(1,\ 1 + (| psi_{root} | - psi_{crit}) \cdot psi_s)$$ {#eq-kf_d}

where psi~root~ is the soil hydraulic potential, psi~crit~ is the critical soil water potential at which the leaf stem partitioning is 1 and psi~s~ is the slope of the relationship between leaf stem partitioning and soil water potential. The default value of psi~s~ is set to 0.296 in the model. The value of psi~crit~ is set to a default of 2.24 MPa in the model. These parameters are from @ratjen2016.

The value of psi~crit~ is the critical soil water potential at which the leaf stem partitioning is 1. The value of psi~s~ is the slope of the relationship between leaf stem partitioning and soil water potential. The default value of psi~s~ is set to 0.296 in the model. The value of psi~crit~ is set to a default of 2.24 MPa in the model.

### Nitrogen effects

Under nitrogen deficiency a higher fraction of dry matter is partitioned to the stem. The partitioning of dry matter between leaf and stem is calculated from the nitrogen nutrition index (@eq-kf_n).

$$kf_n = max(1,\ 1 + (NNI_{crit} - NNI) \cdot NNI_{inc})$$ {#eq-kf_n}

where NNI~crit~ is the critical nitrogen nutrition index at which the leaf stem partitioning is 1, NNI~inc~ is the increase of the leaf stem partitioning per unit of NNI and NNI is the actual nitrogen nutrition index. The default value of NNI~inc~ is set to 0.595 in the model. The value of NNI~crit~ is set to a default of 1.377 in the model.

The stem fraction of shoot dry matter increase is calculated from an allometric relation ship:

$$f_{stem*} = 1 - \frac{1}{ 1 + e^h \cdot LFWT^{g-1} \cdot g}$$ {#eq-fStem}

where LFWT is the leaf DM per square meter and h and g are parameters of the allometric relationship. The default values of g and h are set to 1.46 and -2.13 in the model.

$$f_{stem} = min(1, \ f_{Stem*} \cdot max(kf_d, \ kf_n))$$

```{r}
#| label: fig-fStem
#| fig-cap: Stem fraction of shoot dry matter increase as a function of leaf dry matter and NNI (left) and as a function of leaf dry matter and psi_root (right)
#| fig-align: center
#| echo: false
#| 

fStem <- function(LFWT, h, g){
  fStem <- 1 - 1/(1 + exp(h) * LFWT^(g-1) * g)
  return(fStem)
}


kf_n <- function(NNI, NNI_crit, NNI_inc){
  kf_n <- pmax(1, 1 + (NNI_crit - NNI) * NNI_inc)
  return(kf_n)
}


kf_d <- function(psi_root, psi_crit, psi_s){
  kf_d <- pmax(1, 1 + (abs(psi_root) - psi_crit) * psi_s)
  return(kf_d)
}

h <- -2.13
g <- 1.46
psi_crit <- 2.24
psi_s <- 0.296

NNI_crit <- 1.377
NNI_inc <- 0.595


df_fStem <- expand.grid(LFWT = seq(50, 200, 1),
                        NNI = seq(0.5, 1.5, 0.25))
library(RColorBrewer)
myScale_color <- c('#ffffcc','#d9f0a3','#addd8e','#78c679','#31a354','#006837')#brewer.pal(length(unique(df_fStem$NNI)), "GnYl")


df_fStem$fStem_ <- fStem(df_fStem$LFWT, h, g)
df_fStem$kf_n <- kf_n(df_fStem$NNI, NNI_crit, NNI_inc)
df_fStem$fStem <- pmin(1,df_fStem$fStem_ * df_fStem$kf_n)  

df_fStem$NNI <- as.factor(df_fStem$NNI)

p1 <- ggplot(data = df_fStem, aes(x = LFWT, y = fStem, color=NNI)) +
  geom_line( size=2) +
  labs(x = "Leaf dry matter [g m^-2]", y = "fStem [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_manual(values = myScale_color)  +
  theme(legend.position = "top")
#p1


df_fStem2 <- expand.grid(LFWT = seq(50, 200, 1),
                        psi_root = seq(1, 5, 1))

df_fStem2$kf_d <- kf_d(df_fStem2$psi_root, psi_crit, psi_s)
df_fStem2$fStem_ <- fStem(df_fStem2$LFWT, h, g)
df_fStem2$fStem <- pmin(1, df_fStem2$fStem_ * df_fStem2$kf_d)

df_fStem2$psi_root <- as.factor(df_fStem2$psi_root)
myScale_color2 <- c('#f7fbff','#deebf7','#c6dbef','#9ecae1','#6baed6','#4292c6','#2171b5','#084594')#brewer.pal(length(unique(df_fStem$NNI)), "GnYl")

p2 <- ggplot(data = df_fStem2, aes(x = LFWT, y = fStem, color=psi_root)) +
  geom_line( size=2) +
  labs(x = "Leaf dry matter [g m^-2]", y = "fStem [0..1]") +
  theme_bw(base_size = 20) +
  scale_color_manual(values = myScale_color2) +
  theme(legend.position = "top") +
  theme(axis.title.y = element_blank()) +
  theme(axis.text.y = element_blank()) 
#p2


library(patchwork)
p <- p1 + p2
p

```

## Fine root growth

The fraction of assimilates allocated to fine roots is calculated from a linear decrease of fine root mass with increasing temperature sum.

$$f_{fineroot} = max \left( 0, \left(f_{FineRoot0} - f_{FineRootDec} \cdot Tempsum \right) \right)$$ {#eq-PTF}

where $f_{FineRoot0}$ is the initial fraction of assimilates allocated to fine roots, $f_{FineRootDec}$ is the decrease of the fraction of assimilates allocated to fine roots per unit of temperature sum and $Tempsum$ is the temperature sum since sowing. The default values of $f_{FineRoot0}$ and $f_{FineRootDec}$ are set to 0.653 and 0.000501 in the model.

Historically the fraction of assimilated allocated to the shoot is called PTF in Ceres Wheat.

$$PTF = min \left( 1, 1 - f_{fineroot} \right)$$

Effects of drought stress and nitrogen shortage on the partitioning of dry matter between shoot and root are considered in the model, but can be switched off by setting the respectives model options. These effects are implemented by altering the value of PTF and f~fineroot~ is re-calculated from PTF.

Under drought stress the initial value of PTF is decreased by 0.1 times the difference between 1 and the ratio of actual to potential tranpiration (TransIntRatio) according to the following equation:

$$PTF = PTF - 0.1 \cdot (1 - TransIntRatio)$$ {#eq-PTF_drought}

This is a preliminary parameterization of the effect of drought stress on the partitioning of dry matter between shoot and root. The value of 0.1 is a first guess and should be further calibrated.

Under nitrogen shortage the initial value of PTF is decreased by 0.1 times the difference between 1 and the nitrogen nutrition index (NNI) according to the following equation:

$$PTF = PTF - 0.1 \cdot (1 - NNI)$$ {#eq-PTF_NNI}

This is a preliminary parameterization of the effect of nitrogen shortage on the partitioning of dry matter between shoot and root. The value of 0.1 is a first guess and should be further calibrated.

The fraction of assimilates allocated to fine roots is limited to a value between 0 and 1 and is used to calculate the daily change of the fine root mass per plant:

$$f_{fineroot} = max(0, 1 - PTF)$$ {#eq-FFineroot}

## Leaf nitrogen concentration

After the BBCH stage of the crop reaches the value $EC_{crit_{NcLeaf}}$, which is set to 27, i.e. before shooting, the leaf nitrogen concentration \[% N of DM\] is calculated as follows:\
$$Nc_{opt_{leaf}} = Nc_{leaf_{Vf1}} \cdot LFWT + Nc_{leaf_{Vf2}}$$ {#eq-NcOptLeaf} thereby $Nc_{leaf_{Vf1}}$ and $Nc_{leaf_{Vf2}}$ are parameters of the linear relationship between leaf nitrogen concentration and leaf dry matter. The default values of $Nc_{leaf_{Vf1}}$ and $Nc_{leaf_{Vf2}}$ are set to -0.0061 and 5.9543 in the model.

In a transitional phase between autumn and spring, the leaf nitrogen concentration is calculated as follows:

$$\begin{align*}
\frac{ Nc_{Leaf_{Winter}}}{dt} & = (Nc_{leaf_{winter}} - Nc_{leaf_{min}}) \cdot rgr_{NcLeafWinter} \cdot \\
  &  GlobRad \cdot \frac{ 1 - (Nc_{leaf_{winter}}- Nc_{leaf_{min}})}  {Nc_{Leaf_{Vf1}} \cdot LFWT + Nc_{Leaf_{Vf2}} - Nc_{leaf_{min}}}
\end{align*}$$ {#eq-NcLeafWinter}

where $Nc_{leaf_{min}}$ is the minimum leaf nitrogen concentration, $rgr_{NcLeafWinter}$ is the relative growth rate of the leaf nitrogen concentration, and $GlobRad$ is the global radiation. The default values of $Nc_{leaf_{min}}$ and $rgr_{NcLeafWinter}$ are set to 1.5 and 0.0001 in the model. The value of $Nc_{leaf_{min}}$ is the minimum leaf nitrogen concentration. The value of $rgr_{NcLeafWinter}$ is the relative growth rate of the leaf nitrogen concentration. The value of $GlobRad$ is the global radiation. The value of $Nc_{leaf_{min}}$ is the minimum leaf nitrogen concentration. The value of $rgr_{NcLeafWinter}$ is the relative growth rate of the leaf nitrogen concentration. The value of $GlobRad$ is the global radiation.

if DayOfYear \< 150 then if TEMPM \> 0 then // transitional phase between autumn and spring 

$$Nc_optLeaf = NcLeafWinter$$ {#eq-NcOptLeafWinter}

else

### Calc_Leaf_N_Change

Above the critical BBCH stage ($EC_{crit_{NcLeaf}}$, set to EC 27, i.e. end of tillering) the optimum leaf nitrogen concentration is calculated from a linear dilution curve:

$$Nc_{opt_{Leaf}} = Nc_{Leaf_{Vf1}} \cdot LFWT_{m2} + Nc_{Leaf_{Vf2}}$$

where $Nc_{Leaf_{Vf1}}$ and $Nc_{Leaf_{Vf2}}$ are parameters of the linear relationship between leaf nitrogen concentration and leaf dry matter. The default values of $Nc_{Leaf_{Vf1}}$ and $Nc_{Leaf_{Vf2}}$ are set to -0.0061 and 5.9543 in the model.

```{r}
#| label: fig-NcLeaf
#| fig-cap: Leaf nitrogen concentration under optimal N supply as a function of leaf dry matter
#| fig-align: center
#| echo: false

NcLeaf <- function(LFWT, NcLeaf_a, NcLeaf_b){
  NcLeaf <- NcLeaf_a * LFWT + NcLeaf_b
  return(NcLeaf)
}

NcLeaf_a <- -0.0061
NcLeaf_b <- 5.9543

LFWT <- seq(0, 400, 1)

df_NcLeaf <- data.frame(LFWT = LFWT)
df_NcLeaf$NcLeaf <- NcLeaf(df_NcLeaf$LFWT, NcLeaf_a, NcLeaf_b)

ggplot(data = df_NcLeaf) +
  geom_line(aes(x = LFWT, y = NcLeaf, color=NcLeaf), size=2) +
  labs(x = "Leaf dry matter [g m^-2]", y = "NcLeaf [%]") +
  theme_bw(base_size = 20) +
  scale_color_gradient(low = "yellow", high = "darkgreen") +
  scale_y_continuous(limits = c(0, 6)) 


```

The daily change of the leaf nitrogen amount per plant is calculated from the daily change of leaf dry matter and the leaf nitrogen concentration under optimal N supply and the difference between the actual leaf nitrogen amount and the optimal leaf nitrogen amount in the leaf fraction of a plant:

$$\frac {N_{Leaf_{pl}}}{dt} = \frac {LFWT_{pl}}{dt} \cdot Nc_{opt_{Leaf}} / 100 + Nc_{opt_{Leaf}} / 100 \cdot LFWT_{pl} - N_{Leaf_{pl}}$$ {#eq-NLeafpl}

### Stem N

A similar approach is used to calculate the stem nitrogen concentration under optimal N supply. The stem nitrogen concentration under optimal N supply is, however, calculated from a non-linear dilution curve:

$$NearOptNCStem = 0.98 \cdot (1 / (NcStem_a + NcStem_b \cdot STMWT_{m2}))$$

```{r}
#| label: fig-NcStem
#| fig-cap: Stem nitrogen concentration as a function of stem dry matter

NcStem <- function(STMWT, NcStem_a, NcStem_b){
  NcStem <- 0.98 * (1 / (NcStem_a + NcStem_b * STMWT))
  return(NcStem)
}

STMWT <- seq(0, 400, 1)
NcStem_a <- 0.1475
NcStem_b <- 0.0011


df_NcStem <- data.frame(STMWT = STMWT)
df_NcStem$NcStem <- NcStem(df_NcStem$STMWT, NcStem_a, NcStem_b)
df_NcStem$NcStemNearOpt <- 0.98*df_NcStem$NcStem

ggplot(data = df_NcStem) +
  geom_line(aes(x = STMWT, y = NcStem, color=NcStem),size=2) +
  geom_line(aes(x = STMWT, y = NcStemNearOpt), size=1, linetype=2) +
  labs(x = "Stem dry matter [g m^-2]", y = "NcStem [%]") +
  theme_bw(base_size = 20) +
  scale_color_gradient(low = "yellow", high = "darkgreen") +
  scale_y_continuous(limits = c(0, 5)) 


```

## Grain filling

### Grain number

The model for grain number follows the assumption that the grain number per square meter (GPSM) is a function of the shoot dry matter at mid flowering i.e. EC65 (DM\~65), the nitrogen nutrition index at EC 60 (NNI\~60), and the average photothermal quotient from 45 d preceding anthesis (Q45):

$$GPSM= G4\cdot ln \left( DM_{65} \cdot min \left( NNI_{60}\right) \cdot Q45 \right)^{a}$$ {#eq-GPSM}

where GM4 is a parameter of the regression equation. The default values of G4 and a are set to149.153 and 2.6233 in the model (see @fig-GPSM). Within the source code the parameter G4 ist called GM4 and the parameter a is named GM4_a. See [@ratjen2012] for the derivation of this approach .

![Relationship between the log transformed product of different plant parameters (NNI60 = N nutrition status of wheat crops at anthesis, Q45= the photo thermal quotient 45 d preceding anthesis, DM65 = total shoot dry matter per square meter at anthesis) and grain number per square meter (GPSM) of wheat crops from field experiments with different N fertilizations from [@ratjen2012].](GPSM_regression.png){#fig-GPSM}

For the estimation of grains per plant in order to calculate the initial value of grain N an early estimate of GPSM is derived from the shoot dry matter at anthesis (TOPWT_m2) and the photothermal quotient 45 d preceding anthesis (Q45):

if (EC \>= 40) and (NNI60 \<= 0) and if $ln(TOPWT_{m2} \cdot Q45) > 0$ then

$$GPPVAR = \left ( GM4 \cdot \left ( ln \left ( TOPWT_{m2} \cdot Q45 \right) \right)^{GM4_2} \right) / plants$$ {#eq-GPPVAR}

where GM4\~2 is a parameter of the regression equation. The default value of GM4\~2 is set to 0.0001 in the model.

### Initialisation

The initial change of the grain weight is calculated using a sliding N and C accumulation of initial grain N & C from EC 40 to 65 from the parameter $GRNWT_{ini}$ and the missing fraction of that weight. Initial grain weight per plant and the grain filling rate according to the following equation:

$$\frac{GRNWT_{pl}}{dt} = GRNWT_{ini} / 1000 \cdot GPPVAR \cdot min\left( 1, \frac{(EC - 40)}{ (65 - 40)}\right) - GRNWT_{pl}$$ {#eq-GRNWTplini}

where $GRNWT_{ini}$ is the initial grain weight per plant, $GPPVAR$ is the grain filling rate, $EC$ is the EC stage. The value of $GRNWT_{ini}$ is set to 0.1 in the model. The value of $GPPVAR$ is set to 0.0001 in the model.\
Because the initial weight comes from the stem fraction, the rate of change of DM stem has to be adjusted:

$$\frac{STMWT_{pl}}{dt} = \frac{STMWT_{pl}}{dt} - \frac{GRNWT_{pl}}{dt}$$ {#eq-STMWTpl_corr}

### Grain filling

A common approach is to assume grain growth as a function of biomass accumulation after anthesis plus reserves (e.g. [@jamieson1998] or simply as the sum of accumulated biomass after a defined growth stage (e.g. Ritchie 1985). An alternative approach is to simulate potential grain yield as a linear increase in harvest index (HI) with accumulated thermal time from the beginning of grain-filling to maturity (e.g. [@sinclair1992; @chapman1993; @hammer1995; @goyne1996; @meinke1998a] assuming a constant or cultivar specific potential HI. Thereby, the harvest index is the ratio of grain to shoot dry mass at harvest. Simplified (according to the ‘SWMIN’ concept of Ceres-Wheat) the straw fraction of the shoot at harvest can be seen as proportional to the shoot mass at begin of spike growth (W\~0), where grain mass is proportional to the shoot accumulation after ear emergence (\$\Delta W\$):

$$
HI=\frac{{{W}_{grain}}}{{{W}_{straw}}+{{W}_{grain}}}\sim\frac{\Delta W}{{{W}_{0}}+\Delta W} 
$$ {#eq-HI1}

The shoot mass accumulation is the product of the average amount of intercepted light (avL) times the average light use efficiency (avLUE) over the period of spike growth($\Delta t$)

$$\Delta W=\Delta t\times avL\times avLUE$$ {#eq-DeltaW}

whereby $\Delta t$ is the duration of the spike growth phase in thermal time (dtt) divided by the average temperature during this period (avT):

$$\Delta t=\frac{dtt}{avT}$$ {#eq-DeltaT}

Insertion of @eq-HI1 into @eq-DeltaT yields:

$$\Delta W=\frac{dtt\cdot avL\cdot avLUE}{avT}=avQ\cdot avLUE\cdot dtt$$ {#eq-DeltaW2}

whereby avQ is photo-thermal-quotient \[MJ.°C-1\], defined as the ratio of mean global radiation and mean temperature over the period of $\Delta t$.

#### Potential harvest index

Assuming dtt and avLUE as constant, variation in HI is a function of W0 and avQ only. In unstressed crops the variation in W0 is small compared to the variation of $\Delta W$, which is more influenced by water limitation. Thus, the potential HI (HI~pot~) is dominated by avQ. Following this reasoning, the potential HI in HumeWheat is calculated as a function of photo-thermal-quotient avQHI \[MJ.°C-1\] defined as the running ratio of mean global radiation and mean temperature over the period between booting and mid of milk ripe stage (BBCH 50-75):

$$HI_{pot}(t)=H{{I}_{\operatorname{int}}}+H{{I}_{inc}}\times av{{Q}_{HI}}(t)$$ {#eq-HIpot}

where $HI_{int}$ and $HI_{inc}$ are parameters of the regression equation. The default values of $HI_{int}$ and $HI_{inc}$ are set to 0.196 and 0.2786 in the model.

![Potential harvest index as a function of the quotient of cumulative radiation to temperature sum during grain filling where $QHI_{INC}$ and $QHI_{INT}$ are parameters of the regression equation. The default values of $QHI_{INC}$ and $QHI_{INT}$ are set to 0.196 and 0.2786 in the model.](HI_regression.png){fig-align="center"}

The value of QHI is continuously calculated/updated from BBCH 60 to BBCH 75 from the ratio of sum of accumulated radiation to the sum of accumulated temperature since \>= BBCH 50.

```{r}
#| label: CalcRHI
#| echo: false
# parameter P5 is descaled to Xm
P5 <- 11.67
Plants <- 300

QHI_INC <- 0.196
QHI_INT <- 0.2786

QHI <- 1.3

potHI <- QHI_INC * QHI + QHI_INT

Xm <- (P5 + 21.5) / 0.05

Xmid <- 250

TOPWT_pl <- 1000
Senwt_pl <- 0
iniGRNWT <- 3.5 # initial grain weight (CW 3) [mg]

GPP <- 8000000/50/300

RHI_ini <- ((GPP * (iniGRNWT / 1000)) / TOPWT_pl) * (1 / potHI)

r_RHI <- log(1 / RHI_ini - 1) / Xmid

K_RHI <- 1#((exp(r_RHI * Xm) - 1) * RHI_ini) / (exp(r_RHI * Xm) * RHI_ini - 1)

b_RHI <- (K_RHI - RHI_ini) / RHI_ini
SUMDTTGF <- seq(0, 600)

RHI <- K_RHI / (1 + b_RHI * exp(-r_RHI * SUMDTTGF))

GRNWT_pl <- TOPWT_pl*potHI/Plants

potGROGRN <- (TOPWT_pl + Senwt_pl) * potHI * RHI - GRNWT_pl

#GROGRN <- max(0, min(potGROGRN, STMWT_pl - Swmin))


```

#### Dynamics of grain filling

According to Ritchie and Godwin (1987), the grain mass GRNWT~ini~ $[mg\cdot grain^{-1}]$ is initialized with 3.5 at BBCH stage 65.

##### EC stages 40 to 65

In order to consider pre/early flowering growth of the ear and the spike, die grain weight is linearly increased from BBCH 40 to 65 up to the value of 3.5 mg:

$$
\frac{GRNWT_{pl}}{dt} = \frac{GRNWT_{ini}}{1000} \cdot GPPVAR \cdot min \left( 1, \frac{EC - 40} {65 - 40} \right) - GRNWT_{pl}
$$ {#eq-GRNWTpl}

Because the spike is assumed as part of the stem fraction, stem weight is reduced by the sum of the initial grain mass at beginning of grain filling.

$$\frac {dSTMWT_{pl}}{dt} = \frac {dSTMWT_{pl}}{dt} - \frac {dGRNWT_{pl}}{dt}$$ {#eq-STMWTpl}

##### EC stages 65 to 75

The dynamisation of grain filling from the potential harvest index approach is done by inserting a relative harvest index or relativ potential harvest index (RHI) which is increasing during the grain filling according to a logistic growth function.

At first the parameter P5 which determines the length of the grain filling phase within the CERES model is descaled to the temperature sum for grain filling (X~m~) according to:

$$X_m = \frac{(P5 + 21.5) } {0.05}$$ {#eq-Xm}

The mid of the grain filling phase is estimated from the inflection point of the logistic function of the grain filling phase using the parameter *dECDP* which is set to 250 \[°Cd\], but should be in an order of 0.5 times X\~m.

$$X_{mid} = dECDP$$ {#eq-Xmid}

The initial ratio of the harvest index to the potential harvest index HI/potHI (relative harvest index, RHI) is called RHI~ini~ is calculated from the ratio of the initial grain weight (GRNWT~ini~) to the top weight of the plant (TOPWT~pl~) and the potential harvest index (HI~pot~) according to the following equation:

$$RHI_{ini} =  \frac{ GPP \cdot GRNWT_{ini} / 1000} { TOPWT_{pl}} \cdot \frac{1}{HI_{pot}}$$ {#eq-RHIINI}

The intrinsic growth rate of the logistic increase of RHI during the grain filling phase r~RHI~ is according to the following equation from the initial relative harvest index (RHI~ini~) and the temperature sum of mid of the grain filling phase (X~mid~)) approximated by the inflection point of the logistic growth equation:

$$r_{RHI} = ln \left( \frac{ 1 } {RHI_{ini} - 1 }\right) \cdot \frac{1}{Xmid}$$ {#eq-rRHI}

The derivation of this equation is based on equation determining the time of the inflection point of a logistic growth function t\_{inf} here called X~mid~ and the assumption that the maximum value of RHI is 1:

$$t_{inf}​= \frac{1}{r_{RHI}} \cdot ln \left( \frac{1−RHI_{ini}}{RHI_{ini}} \right)$$ {#eq-tinf}

Solving equation @eq-tinf for r\_{RHI} yields equation @eq-rRHI.

The growth rate parameter b_RHI is calculated from the potential relative harvest index (which is 1) and the initial ratio of the harvest index to the potential harvest index according to the following equation:

$$b_{RHI} = \frac{1 - RHI_{ini}}{ RHI_{ini}}$$ {#eq-bRHI}

The ratio of the actual harvest index to the potential harvest index (RHI) is calculated from a logistic equation with the potential harvest index K~GF~ and the relative growth rate of the grain filling phase according to the following equation:

$$RHI = \frac{1}{(1 + b_{RHI} * e^{(-r_{RHI} \cdot SUMDTT_{GF}))}}$$ {#eq-RHI}

See @fig-RHI for the relationship between the relative potential harvest index and the cumulative temperature sum during grain filling.

```{r}
#| include: TRUE
#| label: fig-RHI
#| fig.cap: Relative potential harvest index as a function of the cumulative temperature sum during grain filling
#| fig.align: "center"

plot(SUMDTTGF, RHI, type = "l", xlab = "SumDTTGF [°Cd]", ylab = "Relative harvest index (RHI)")
```

The grain DM growth rate GROGRN is calculated from the potential, sink limited growth rate of the grains and the difference between the actual stem weight and the minimum stem weight:

$$GROGRN_{pot} = (TOPWT_{pl} + Senwt_{pl}) \cdot  HI_{pot} * RHI - GRNWT_{pl}$$ {#eq-GROGRNpot}

The growth rate of grain per plant is calculated from the potential, sink limited growth rate of the grains and the difference between the actual stem weight and the minimum stem weight *SWMIN*:

$$GROGRN = max(0, min(GROGRN_{pot}, STMWT_{pl} - SWMIN))$$

$$ \frac{STMWT_{pl}}{dt} = \frac{STMWT_{pl}}{dt} - GROGRN$$

The grain weight per plant is calculated from the grain weight per plant and the growth rate of the grain weight per plant according to the following equation: $$\frac{GRNWT_{pl}}{dt} = GROGRN$$

# Leaf Area Development

Many crop models are simulating leaf area as a function of simulated leaf biomass multiplied with the ratio of leaf area over leaf dry weight (SLA). Thereby two fundamentally different approaches can be employed: (i) The SLA refers to the new leaf area formed or (ii) to the overall canopy of the crop [@marcelis1998]. The former approach considers LAI as a state variable, while SLA refers to the change rate of this state. With the latter approach LAI is usually defined as a derived variable. Both approaches have their justification: During early leaf growth SLA is decreasing with increasing leaf size, because of the greater proportion of structural C needed to maintain bigger leafs [@rawson1987a]. Thus the SLA of the new formed leafs is smaller, while the SLA of the previously formed, smaller leafs remains higher. This relationship is reflected by the decrease in SLA of new formed leaf area. As a converse effect, the influence of mutual shading becomes more important with rising LAI, what enhances SLA. The influence of shading does not concern new formed leaf area of the top leaves, but earlier formed, lower inserted leaves. Considering this aspect, it is not appropriate to conserve the SLA of already formed leaves. This implies an interaction between SLA and LAI, which should be taken into account. During early leaf growth the decrease due to leaf size probably determines SLA, but is soon dominated by the influence of mutual shading. The transition between these two phases is variable, which complicates the SLA modelling. Furthermore, for winter annual crops also the drastically changing light environment from sowing in autumn until rapid growth in spring affects SLA.

A compromising solution of both approaches is provided by the simulated leaf area development in HumeWheat. Thereby a potential SLA (SLA~pot~) refers to the complete canopy, but affects only the LAI increase, whereas the reduction of LAI due to the senescence processes is calculated by separate routines:

$$LAI_{new}(t)=\max (0,W_{leaf}(t) \cdot SLA_{pot}(t) \cdot 10^{-4} - LAI(t))$$ {#eq-LAI_new}

Daily LAI increment is calculated from the increase in total leaf area and total senescence:

$$\frac{dLAI}{dt}=LA{{I}_{new}}(t)-\frac{dSen}{dt}$$ {#eq-dLAI}

## Calculation of SLA~pot~

At the beginning of leaf growth, i.e. after emergence of the first leaf SLA~pot~ is initialized with the maximum SLA (SLA~max~). The standard value of SLA~max~ is 250 \[cm^2^/g\].

At later stages, i.e. after start of stem elongation (BBCH 31) The SLA usually increases due to mutual shading as a function of LAI.

$$SLA_{LAI}(t)=a_{SLA}+b_{SLA} \cdot LAI(t)$$ {#eq-SLA_LAI}

where $a_{SLA}$ and $b_{SLA}$ are parameters of the regression equation. The default values of $a_{SLA}$ and $b_{SLA}$ are set to 136.69 and 14.93 in the model (@fig-SLA). See Fig. 3b in [@ratjen2013].

```{r}
#| label: fig-SLA
#| fig-cap: Specific leaf area as a function of leaf area index
#| fig-align: center
#| echo: false

SLA <- function(LAI, a_SLA, b_SLA){
  SLA <- a_SLA + b_SLA * LAI
  return(SLA)
}

a_SLA <- 136.69
b_SLA <- 14.93

LAI <- seq(2, 5, 0.1)

df_SLA <- data.frame(LAI = LAI)

df_SLA$SLA <- SLA(df_SLA$LAI, a_SLA, b_SLA)

ggplot(data = df_SLA) +
  geom_line(aes(x = LAI, y = SLA), size=2) +
  labs(x = "Leaf area index [m^2 m^-2]", y = "SLA [cm^2 g^-1]") +
  theme_bw(base_size = 20) +
  scale_y_continuous(limits = c(100, 300)) +
  scale_x_continuous(limits = c(1.5, 5))


```

In order to describe the transition from the high SLA values after emergence to lower values followed by the subsequent increase due to the shading effects of increasing LAI a transition value of SLA (SLA~Trans~) is calculated:

$$SLA_{Trans}(t)=SLA_{LAI}(t)+ (SLA_{max}-SLA_{LAI}(t)) \cdot e^{ (f_{dec1} \cdot LAI(t)+f_{dec2})}$$ {#eq-SLAtrans}

where $f_{dec1}$ and $f_{dec2}$ are parameters describing the transition. The default values of $f_{dec1}$ and $f_{dec2}$ are set to -1.1237 and 0.3 in the model.

In every time step the potential SLA is calculated as the minimum of the previous SLA and the calculated SLA~Trans~. If the old SLA is larger than SLA~LAI~, the SLA is equal to SLA~trans~, if not SLA is equal to SLA~LAI~.

An example for the result of this algorithm is given in @fig-SLAtrans.

```{r}
#| label: fig-SLAtrans
#| fig-cap: Specific leaf area as a function of leaf area index
#| fig-align: center
#| echo: false

maxSLA <- 250
a_SLA <- 136.69
b_SLA <- 14.93
SLA_B <- maxSLA # start SLA of juvenescent leavess (APSIM, Asseng 2003)

f1_SLA <- -1.1237
f2_SLA <- 0.3
LAI <- seq(0, 5, 0.1)
df_SLAtrans <- data.frame(LAI = LAI)
df_SLAtrans$SLA <- NA
df_SLAtrans[1, "SLA"] <- maxSLA

for (i in 2:nrow(df_SLAtrans)){
   SLAs <- min(maxSLA, a_SLA + b_SLA*df_SLAtrans[i,"LAI"])
   if (df_SLAtrans[i-1, "SLA"] > SLAs){
      # transition phase between initial SLA and later phase where
      # mutual shading dominates SLA
     SLAw <- SLAs + (SLA_B - SLAs) * exp(f1_SLA * df_SLAtrans[i,"LAI"] + f2_SLA)
     df_SLAtrans[i, "SLA"] <- min(df_SLAtrans[i-1, "SLA"], SLAw)
   } else {
     # phase where shading dominates SLA (equates LAI~2)
     df_SLAtrans[i, "SLA"] <- SLAs
   }
  
}
 

ggplot(data = df_SLAtrans) +
  geom_line(aes(x = LAI, y = SLA), size=2) +
  labs(x = "Leaf area index [m^2 m^-2]", y = "SLA [cm^2 g^-1]") +
  theme_bw(base_size = 20) +
  scale_y_continuous(limits = c(100, 300))

```

## Leaf number

The leaf number (LN) on the main stem is calculated from the cumulative phyllochrons (CUMPH) since emergence and the phyllochron interval (PHINT) according to the following equations:

$$CUMPH = T_{eff} / PHINT$$ {#eq-CUMPH}

$$LN = trunc( CUMPH + 1 )$$ {#eq-LN}

where $T_{eff}$ is the effective temperature, $PHINT$ is the phyllochron interval, and $LN$ is the leaf number on the main stem. The value of $PHINT$ is set to 91.74 \[°Cd\] in the model (see @eq-dBBCH_dt_GS1 and @johnen2012).

## Leaf growth

The leaf area is calculated on a leaf age class level, thereby the leaf number on the main stem is giving the age classes. This approach is basically from CERES-Wheat. Basically, only the youngest leaf age class is growing. This approach allows to implement a simple approach for leaf senescence, which is based on the leaf age. The growth rate of the leaf area of the youngest leaf class is calculated from the sum of the existing leaf dry matter of the leaf (LFWT~pl~) plus the daily dry matter growth rate of the leaf fraction of a single plant (GROLF) times the specific leaf area (SLA) minus the existing leaf area for that leaf age class (sumplsc):

$$\frac{dPLSC_i}{dt} = PLSCGR_i= (PLSC_i + GROLF) \cdot SLA - PLSC_{sum}$$ {#eq-PLSCGR}

## Senescence

Leaf senescence is governed by different factors in HumeWheat:

-   age
-   drought stress
-   nitrogen stress
-   light availability and also the EC stage of the crop

### Age


#### CERES algorithm for leaf senescence in early stages (BBCH 10-30)

The model includes the option to simulate leaf senescence in the early stages of the crop according to the CERES-Wheat approach. 
This algorithm, however, was not evaluated for own data sets and the leaf area simulation may perform better if this option is set to false.

The 5th oldest leaf fraction dies within one phyllochron interval. First the leaf area of the oldest leaf fraction is fixed as a potential senescence rate when four younger leaves are present:

$$senratesLA[trunc(LN)-4] = PLSC[trunc(LN)-4]$$ {#eq-senratesLA}

Then the leaf loss rate of that leaf age fraction is calculated from the leaf area of this fraction at the beginning of the senescence process and the fraction of the leaf fraction of the effective temperature (T~eff~) and the phyllochron interval (PHINT):

$$PLALR_a = min(\frac { PLSC[trunc(LN) - 4]} {dt}, senratesLA[trunc(LN) - 4] * T_{eff} / (PHINT))$$ {#eq-PLALR}

where $PLSC$ is the leaf area of the leaf age class, $T_{eff}$ is the effective temperature, $PHINT$ is the phyllochron interval, and $PLALR_a$ is the leaf area loss rate due to age.

#### Leaf senescence in later stages (BBCH 31-71)

In later stages the leaf senescence is calculated as a fraction of the existing leaf area per plant, the effective day temperature and a stage specific parameter.
(see https://nowlin.css.msu.edu/wheat_book/CHAPTER2.html)

For ISTAGE 2 and 4 (BBCH 30-57, see @tbl-CWDevStages), the equation is:

$$PLALR_a = PSENLeaf_1 \cdot T_{eff} \cdot GPLA$$ {#eq-PLALRa1}

and similarly at ISTAGE 5 (BBCH 58-71):

$$PLALR_a = PSENLeaf_2 \cdot T_{eff} \cdot GPLA$$ {#eq-PLALRa2}

where $PSENLeaf_1$ is a parameter of the regression equation. 

The parameters values $PSENLeaf_2$ and $GPLA$ have defaults of 0.0003 and 0.0006 [$cm^2 \cdot °Cd^{-1}$] in the model.



### Drought stress

The base for the calculation of the drought stress is a moving average of the relative TranspirationInterception ratio, i.e. the ratio of the sum of the actual transpiration and interception to the sum of potential transpiration and interception.

If this average ratio (TransIntRatio~even~) and the actual TransIntRatio are smaller than a threshold value (TR~crit~) drought stress induced leaf senescence is calculated. The threshold value is set to 0.62 in the model. This means that drought stress induced leaf senescence occurs if the average *and* the actual ratio of actual to potential transpiration+interception is smaller than 0.62.

In a next step a sustainable leaf area index (LAI~s~) is calculated which gives a ratio of the sum of actual transpiration + interception to the sum of potential transpiration to interceptionn equals the value of TR~crit~.

The daily senescence rate due to drought stress then is calculated from the difference of the actual LAI and the sustainable LAI multiplied with the TransIntRatio divided by 15 (days) times the TransIntRatio~even~ and divided by the number of plants per m^2^, thereby the factor 1e4 converts m^2^ to cm^2^



$$PLALR_d = max\left( 0, \frac{LAI - LAIs} {15} \cdot TransIntRatio_{even} \cdot 1e4 \cdot \frac{1}{plants} \right)$$ {#eq-PLALRd}

where $LAI$ is the leaf area index, $LAIs$ is the sustainable leaf area index, $TransIntRatio_{even}$ is the moving average of the relative transpiration interception ratio, and $plants$ is the number of plants per square meter.

The sustainable leaf area index is derived from an iterative, numerical solution using the Newton method for solving non-linear equations. 

### Nitrogen stress / nitrogen induced leaf senescence 

The algorithm for nitrogen stress induced leaf senescence is based on the specific leaf nitrogen concentration (SLN) and the critical specific leaf nitrogen concentration (SLNtot~crit~). The daily senescence rate due to nitrogen stress is calculated from the difference of the actual LAI and the sustainable LAI multiplied with the ratio of the specific leaf nitrogen concentration to the critical specific leaf nitrogen concentration:

$$PLALR_n = min\left( LAImax \cdot \frac{PLALR_{max}} {100}, LAI \cdot \left( 1 - \frac{SLN} {SLNtot_{crit}} \right) \right) \cdot \frac{1e4}{plants}$$ {#eq-PLALRn}

where $LAImax$ is the maximum leaf area index, $PLALR_{max}$ is the maximum leaf area index loss rate [%], standard value is 5%, $SLN$ is the specific leaf nitrogen concentration [g/m^2^ leaf], $SLNtot_{crit}$ is the critical specific leaf nitrogen concentration (default 0.8) , and $plants$ is the number of plants per square meter. The factor 1e4 converts m^2^ to cm^2^.
This algorithm also induces the leaf senescence during ripening.

Alternatively, the classical leaf senecescence calculation from the CERES-Wheat model can be used. With this algorithm, the leaf area decline during ripening is controlled by the accumulated temperaturs sum during ISTAGE 5:

$$PLALR_n = GPLA \cdot 2 \cdot SUMDTT_5 \cdot \frac { T_{eff}}{TSum_{GF}^2} $$ {#eq-PLALRn_v2}

where $GPLA$ is the leaf area per plant, $SUMDTT5$ is the accumulated temperature sum during ISTAGE 5, $T_{eff}$ is the temperature sum increment, and $TSum_{GF}^2$ is the value of unscaled parameter P5, giving the length of the grain filling period in degree days. The default value of $P5$ is set to 11.67 in the model. According to the equation @eq-TSumGF the equivalent value of $TSum_{GF}$ is `r 430+11.67*20` [°Cd].



### Light limitation

The light dependent leaf senescence is calculated from the leaf area index if the 10 day average of radiation (PAR~av~) [MJ^.^m^-2.^d^-1^] is falling below a threshold value named I~crit~. The threshold value is set to 1 [MJ^.^m^-1.^d^-1^] in the model.

Light dependent senescence only occurs between BBCH 31 and 39, the latter value is, however, a parameter describing the end of leaf growth (EClgend).



The daily senescence rate due to light limitation is calculated from the difference of the actual LAI and the sustainable LAI multiplied with the radiation sum divided by 10 days and divided by the number of plants per m^2^, thereby the factor 1e4 converts m^2^ to cm^2^

In a first step a sustainable leaf area index (LAI~s~) is calculated, which depends on the radiation sum and the critical radiation sum (I~crit~) according to the following equation:

$$ LAI_s = \frac{ln(I_{crit}) - ln(PAR_{av})} {-k_{PAR}}$$ {#eq-LAIs}

where $Icrit$ is the critical radiation sum, $PAR_{av}$ is the 10 day average of photosynthetically active radiation, and $k_{PAR}$ is the extinction coefficient for PAR radiation. The default value of $kPAR$ is set to 0.7 in the model.


## Combined senescence

In order to combine the different senescence processes the maximum of either the maximum of age ord drought senescence or the maximum of nitrogen or light dependent senescence rate is calculated. In total the senescence rate is not larger than the leaf area per plant:


$$    PLALR = min \left( \frac{LAI*1e4}{plants}, max\left(max\left(PLALR_a,PLALR_d\right),
                    max\left(PLALR_n, PLALR_l\right) \right)\right)
$$ {#eq-PLALR}

The algorithms for leaf area senescence are mainly taken from other models like Ceres-Wheat or I_Wheat . A stringent validation has not yet been performed.

# Evapotranspiration

# Soil water

# Implementation

The model was implemented using an object oriented component library termed HUME [@kage1999] on the basis of Embarcadero® Delphi® 2010 (Embarcadero Technologies, Inc., USA). The model is comprised of submodels describing plant growth and development, soil water dynamics, and evapotranspiration.

# Miscellaneous

Temperature depended processes are calculated generally using an effective temperature *(T~eff~)* \[°C\], which is the mean daily air temperature \[°C\] *(T~air~)* minus a base temperature *(T~base~ = 2 °C)* (@eq-effective-temperature).

$$T_{eff}  = \begin{cases}
T_{air} - T_{base} & \text{if}~T>0\\ 
0 & \text{if}~T<2
\end{cases}$$ {#eq-effective-temperature}

# Parameters

# Literature
